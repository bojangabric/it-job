generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    KANDIDAT
    POSLODAVAC
    MODERATOR
}

enum EmploymentType {
    PRAKSA
    PART_TIME
    FULL_TIME
    CONTRACT
}

enum Experience {
    STUDENT
    JUNIOR
    MID_LEVEL
    SENIOR
    LEAD
}

enum Position {
    FRONT_END_DEVELOPER
    BACK_END_DEVELOPER
    FULL_STACK_DEVELOPER
    UI_UX_DESIGNER
    SYSTEM_ADMINISTRATOR
}

model User {
    id          String    @id @default(cuid())
    name        String
    email       String    @unique
    password    String
    location    String?
    role        Role
    image       String    @default("/images/default_avatar.png")
    postedJobs  JobPost[] @relation("postedJobs")
    savedJobs   JobPost[] @relation("savedJobs")
    appliedJobs JobPost[] @relation("appliedJobs")
    comments    Comment[]
    resume      String?
}

model JobPost {
    id          String         @id @default(cuid())
    active      Boolean
    title       String
    description String
    skills      String[]
    experience  Experience
    position    Position
    type        EmploymentType
    postedById  String
    postedBy    User           @relation("postedJobs", fields: [postedById], references: [id])
    savedJobs   User[]         @relation("savedJobs")
    appliedJobs User[]         @relation("appliedJobs")
    comments    Comment[]

    @@map("jobPosts")
}

model Comment {
    id        String  @id @default(cuid())
    comment   String
    jobId     JobPost @relation(fields: [jobPostId], references: [id])
    writtenBy User    @relation(fields: [userId], references: [id])
    userId    String
    jobPostId String

    @@map("comments")
}
